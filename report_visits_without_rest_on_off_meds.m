rootdir  = '/Users/roee/Starr_Lab_Folder/Data_Analysis/Raw_Data/BR_reorganized';
resultsdir   = fullfile('..','results','mat_file_with_all_session_jsons');
figdir = fullfile('..','figures','on-off-meds-psd-first-pass');
evalc('mkdir(figdir)');
[settings, params] = get_settings_params();
load(fullfile(resultsdir,'all_session_celldb.mat'),'outdb','sessiondb','symptomcat');



%% find visits that don't have visits with rest on / off medication and report them.
% inclusion criteria:
patients = unique(sessiondb.patientcode);
visits = unique(sessiondb.visitCategory);
visitsuse = visits([10    11     9     7     2     4     6     8     3     5]);
visitsuse = visitsuse(2:4);  % only look at predis, 10 day, 3 weeks 
chanuse = 1; % 1 = stn, 2 = m1
labelarea{1} = 'stn'; labelarea{2} = 'm1';
chanidx = [1 3];
colshow = {'patientcode',...
    'visitCategory',...
    'filename',...
    'usevisit',...
    'sessionSerialNum',...
    'Medication',...
    'ConditionTask',...
    'StimOn',...
    'sr',...
    'RecordingType',...
    'stn_electrodes',...
    'm1_electrodes',...
    'symptoms',...
    'xlsstatus'};

for p = 1:length(patients) % loop on patients
    for v = 1:length(visitsuse) % loop on visits
        rowsselect = ...
            sessiondb.usevisit == 1 & ...
            strcmp(sessiondb.patientcode,patients(p)) & ...
            strcmp(sessiondb.visitCategory,visitsuse(v)) & ...
            strcmp(sessiondb.ConditionTask,'rest') & ....
            strcmp(sessiondb.Medication,'on');
        newdbon = sessiondb(rowsselect,colshow);
        
        rowsselect = ...
            sessiondb.usevisit == 1 & ...
            strcmp(sessiondb.patientcode,patients(p)) & ...
            strcmp(sessiondb.visitCategory,visitsuse(v)) & ...
            strcmp(sessiondb.ConditionTask,'rest') & ....
            strcmp(sessiondb.Medication,'off');
        newdboff = sessiondb(rowsselect,colshow);
        if isempty(newdbon) && isempty(newdboff)
            fprintf('patient %s visit %s rest on NA and rest off NA\n',...
                patients{p}, visitsuse{v}); 
        end
        if isempty(newdbon) && ~isempty(newdboff)
            fprintf('patient %s visit %s rest on NA and rest off AV \n',...
                patients{p}, visitsuse{v}); 
        end
        if ~isempty(newdbon) && isempty(newdboff)
            fprintf('patient %s visit %s rest on AV and rest off NA \n',...
                patients{p}, visitsuse{v}); 
        end
        
    end
    fprintf('\n');
end
% both cons exist 
    fprintf('\n\n\n');
return; 
for p = 1:length(patients) % loop on patients
    for v = 1:length(visitsuse) % loop on visits
        rowsselect = ...
            sessiondb.usevisit == 1 & ...
            strcmp(sessiondb.patientcode,patients(p)) & ...
            strcmp(sessiondb.visitCategory,visitsuse(v)) & ...
            strcmp(sessiondb.ConditionTask,'rest') & ....
            strcmp(sessiondb.Medication,'on');
        newdbon = sessiondb(rowsselect,colshow);
                rowsselect = ...
            sessiondb.usevisit == 1 & ...
            strcmp(sessiondb.patientcode,patients(p)) & ...
            strcmp(sessiondb.visitCategory,visitsuse(v)) & ...
            strcmp(sessiondb.ConditionTask,'rest') & ....
            strcmp(sessiondb.Medication,'on');
        newdboff = sessiondb(rowsselect,colshow);
        if ~isempty(newdbon) & ~isempty(newdboff)
            fprintf('patient %s visit %s rest on AV and rest off AV\n',...
                patients{p}, visitsuse{v}); 
        end
    end
    fprintf('\n');
end

% writetable(newdb,fullfile(outdir,['missing_conditions_all_subs' '.csv']),'FileType','text');
